services:
  vllm:
    image: lmcache/vllm-openai:latest
    command: >
      /models/Qwen_Qwen2.5-Coder-32B-Instruct-AWQ
      --host 0.0.0.0
      --port 8000
      --tensor-parallel-size ${GPU_COUNT:-1}
      --dtype ${DTYPE:-auto}
      --max-model-len ${MAX_MODEL_LEN:-32768}
      --gpu-memory-utilization ${GPU_UTIL:-0.85}
      --enable-prefix-caching
      --kv-transfer-config '{"kv_connector":"LMCacheConnectorV1","kv_role":"kv_both"}'
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    volumes:
      - ${MODELS_PATH:-./models}:/models:ro
      - ./cache:/cache
      - ${WORKSPACE_DIR:-/root/infbox}:${WORKSPACE_DIR:-/root/infbox}:ro
    ports:
      - "${VLLM_PORT:-8000}:8000"
    environment:
      - CUDA_VISIBLE_DEVICES=${CUDA_DEVICES:-}
      - HF_HOME=/models
      - HUGGING_FACE_HUB_TOKEN=${HF_TOKEN:-}
      - LMCACHE_USE_EXPERIMENTAL=True
      - LMCACHE_CHUNK_SIZE=256
      - LMCACHE_LOCAL_CPU=True
      - LMCACHE_MAX_LOCAL_CPU_SIZE=${CPU_GB:-20}
      - TRITON_CACHE_DIR=/tmp/.triton
      - VLLM_DISABLE_TRITON=false
      - VLLM_ATTENTION_BACKEND=${ATTENTION_BACKEND:-FLASH_ATTN}
    networks:
      - llm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  watcher:
    build:
      context: .
      dockerfile: docker/Dockerfile.watcher
    volumes:
      - ${WORKSPACE_DIR:-/root/infbox}:${WORKSPACE_DIR:-/root/infbox}:ro
      - ./scripts:/scripts:ro
    environment:
      - WATCH_DIR=${WORKSPACE_DIR:-/root/infbox}
      - IGNORE_FILE=.gitignore
      - VLLM_ENDPOINT=http://vllm:8000
      - WATCH_INTERVAL=${WATCH_INTERVAL:-1}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    networks:
      - llm-network
    restart: unless-stopped
    depends_on:
      - vllm

  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./config/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - llm-network
    restart: unless-stopped

networks:
  llm-network:
    driver: bridge

volumes:
  caddy_data:
  caddy_config: